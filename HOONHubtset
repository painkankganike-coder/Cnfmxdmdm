-- =========================
-- Full Rainbow Aimbot (Nearest Head + Rainbow FOV & Tracer)
-- วางต่อท้ายในส่วน Tab_Aimbot ของสคริปต์ WindUI
-- =========================

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- Settings (ปรับผ่าน WindUI)
local Aimbot_Enabled = false
local Aimbot_ShowFOV = true
local Aimbot_FOV = 120              -- พิกเซล
local Aimbot_Smoothness = 0.25      -- 0.01..1 (ยิ่งมาก = เร็วขึ้น)
local Aimbot_HoldToAim = false
local Aimbot_ProjectileSpeed = 0    -- studs/sec (0 = no prediction)
local Aimbot_TargetPart = "Head"    -- ส่วนที่ล็อก
local Rainbow_HueSpeed = 0.6        -- ความเร็วเปลี่ยนสีรุ้ง (ค่าเริ่มต้น)

-- Drawing objects
local fovCircle = Drawing.new("Circle")
fovCircle.Visible = false
fovCircle.Radius = Aimbot_FOV
fovCircle.Thickness = 2
fovCircle.NumSides = 100
fovCircle.Filled = false

local tracerLine = Drawing.new("Line")
tracerLine.Visible = false
tracerLine.Thickness = 2

-- helper: mouse pos & center
local function mousePos()
    return UserInputService:GetMouseLocation()
end

-- prediction helper (simple linear)
local function getPredictedPosition(part, projSpeed)
    if not part then return nil end
    if projSpeed and projSpeed > 0 then
        local dir = part.Position - Camera.CFrame.Position
        local dist = dir.Magnitude
        local travel = dist / projSpeed
        local vel = Vector3.new(0,0,0)
        local root = part.Parent and part.Parent:FindFirstChild("HumanoidRootPart")
        if root and root:IsA("BasePart") then
            vel = root.AssemblyLinearVelocity
        end
        return part.Position + vel * travel
    else
        return part.Position
    end
end

-- find nearest head to mouse within FOV
local function getClosestTarget()
    local center = mousePos()
    local best = nil
    local bestDist = math.huge

    for _, pl in ipairs(Players:GetPlayers()) do
        if pl ~= LocalPlayer and pl.Character and pl.Character:FindFirstChild(Aimbot_TargetPart) and pl.Character:FindFirstChild("Humanoid") then
            local hum = pl.Character.Humanoid
            if hum and hum.Health > 0 then
                local part = pl.Character:FindFirstChild(Aimbot_TargetPart)
                if part then
                    local screenPos, onScreen = Camera:WorldToViewportPoint(part.Position)
                    if onScreen then
                        local screenVec = Vector2.new(screenPos.X, screenPos.Y)
                        local dist = (screenVec - center).Magnitude
                        if dist <= Aimbot_FOV and dist < bestDist then
                            bestDist = dist
                            best = pl
                        end
                    end
                end
            end
        end
    end

    return best
end

-- aim camera smoothly to world pos
local function aimAt(worldPos, smooth)
    if not worldPos then return end
    local camPos = Camera.CFrame.Position
    local dir = (worldPos - camPos)
    if dir.Magnitude == 0 then return end
    local goal = CFrame.new(camPos, camPos + dir.Unit)
    Camera.CFrame = Camera.CFrame:Lerp(goal, math.clamp(smooth, 0, 1))
end

-- rainbow hue state
local hue = 0

-- main update loop
RunService.RenderStepped:Connect(function(dt)
    -- update hue
    hue = (hue + dt * Rainbow_HueSpeed) % 1
    local color = Color3.fromHSV(hue, 1, 1)

    -- update FOV drawing
    fovCircle.Position = mousePos()
    fovCircle.Radius = Aimbot_FOV
    fovCircle.Color = color
    fovCircle.Visible = Aimbot_Enabled and Aimbot_ShowFOV

    -- default hide tracer
    tracerLine.Visible = false

    if not Aimbot_Enabled then
        return
    end

    -- hold-to-aim check
    if Aimbot_HoldToAim and not UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) then
        return
    end

    -- get target
    local targetPlayer = getClosestTarget()
    if not targetPlayer then return end
    local targetPart = targetPlayer.Character and targetPlayer.Character:FindFirstChild(Aimbot_TargetPart)
    if not targetPart then return end

    -- predicted pos & aim
    local aimPos = getPredictedPosition(targetPart, Aimbot_ProjectileSpeed)
    if aimPos then
        aimAt(aimPos, Aimbot_Smoothness)
    end

    -- draw rainbow tracer from screen center to target
    local screenFrom = mousePos() -- tracer start from mouse position (เปลี่ยนเป็น center screen ถ้าต้องการ)
    local tPos, onScreen = Camera:WorldToViewportPoint(targetPart.Position)
    if onScreen then
        tracerLine.From = Vector2.new(screenFrom.X, screenFrom.Y)
        tracerLine.To = Vector2.new(tPos.X, tPos.Y)
        tracerLine.Color = color
        tracerLine.Visible = true
    end
end)

-- =========================
-- WindUI Controls (attach to Tab_Aimbot)
-- =========================
Tab_Aimbot:Toggle({
    Title = "Aimbot (Nearest Head)",
    Desc = "ล็อกหัวผู้เล่นที่ใกล้สุด (client-side camera only)",
    Icon = "target",
    Value = false,
    Callback = function(state)
        Aimbot_Enabled = state
        fovCircle.Visible = state and Aimbot_ShowFOV
        tracerLine.Visible = state
    end
})

Tab_Aimbot:Toggle({
    Title = "Show FOV",
    Desc = "แสดงวง FOV รอบเมาส์",
    Icon = "circle",
    Value = true,
    Callback = function(state)
        Aimbot_ShowFOV = state
        fovCircle.Visible = state and Aimbot_Enabled
    end
})

Tab_Aimbot:Slider({
    Title = "FOV Size",
    Desc = "ขนาดวง FOV (พิกเซล)",
    Step = 5,
    Value = {Min = 30, Max = 800, Default = Aimbot_FOV},
    Callback = function(value)
        Aimbot_FOV = value
        fovCircle.Radius = value
    end
})

Tab_Aimbot:Slider({
    Title = "Smoothness",
    Desc = "ค่าความนุ่มของการหมุนกล้อง (0.01..1.0)",
    Step = 0.01,
    Value = {Min = 0.01, Max = 1.0, Default = Aimbot_Smoothness},
    Callback = function(value)
        Aimbot_Smoothness = value
    end
})

Tab_Aimbot:Toggle({
    Title = "Hold to Aim (RMB)",
    Desc = "ถ้าเปิด ต้องกดขวาค้างเพื่อให้ aimbot ทำงาน",
    Icon = "mouse-pointer",
    Value = false,
    Callback = function(state)
        Aimbot_HoldToAim = state
    end
})

Tab_Aimbot:Dropdown({
    Title = "Target Part",
